# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import requests
import lxml
from bs4 import BeautifulSoup
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(640, 480)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.SearchInput = QtWidgets.QLineEdit(self.centralwidget)
        self.SearchInput.setObjectName("SearchInput")
        self.horizontalLayout.addWidget(self.SearchInput)
        self.SearchButton = QtWidgets.QPushButton(self.centralwidget)
        self.SearchButton.setObjectName("SearchButton")
        self.horizontalLayout.addWidget(self.SearchButton)
        self.verticalLayout_2.addLayout(self.horizontalLayout)
        self.ShowHtmlBox = QtWidgets.QTextBrowser(self.centralwidget)
        self.ShowHtmlBox.setOpenLinks(False)
        self.ShowHtmlBox.setObjectName("ShowHtmlBox")
        self.verticalLayout_2.addWidget(self.ShowHtmlBox)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 640, 26))
        self.menubar.setObjectName("menubar")
        self.Setting = QtWidgets.QMenu(self.menubar)
        self.Setting.setObjectName("Setting")
        MainWindow.setMenuBar(self.menubar)
        self.Font = QtWidgets.QAction(MainWindow)
        self.Font.setObjectName("Font")
        self.Setting.addAction(self.Font)
        self.menubar.addAction(self.Setting.menuAction())

        self.retranslateUi(MainWindow)
        #槽 
        self.SearchButton.clicked.connect(self.EVT_SEARCH_CLICK) # type: ignore
        self.Font.triggered.connect(self.EVT_SETTING_FONT) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        
        #
        self.SetFont("Font/hanazono/HanaMinA.ttf")

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.SearchButton.setText(_translate("MainWindow", "搜索"))
        self.ShowHtmlBox.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'SimSun\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.Setting.setTitle(_translate("MainWindow", "设置"))
        self.Font.setText(_translate("MainWindow", "Font"))

    def SetFont( self,FontFileName ):
        fontId = QtGui.QFontDatabase.addApplicationFont(FontFileName)
        fontName = QtGui.QFontDatabase.applicationFontFamilies(fontId)[0]
        font = QtGui.QFont(fontName,12)
        self.ShowHtmlBox.setFont(font)

    def EVT_SETTING_FONT( self ):
        self.SetFont("Font/hanazono/HanaMinA.ttf")

    def EVT_SEARCH_CLICK( self ):
        heard = {
        "User-Agent":"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/121.0.0.0 Safari/537.36"
        }
        res = requests.get("https://www.name-power.net/fn/{}.html".format(self.SearchInput.text()),headers=heard)
        print(res.status_code)
        string = res.content.decode("utf-8")
        bs = BeautifulSoup(string,features="lxml")
        class_entry = bs.find("div","entry")
        self.ShowHtmlBox.setHtml(class_entry.__str__())
